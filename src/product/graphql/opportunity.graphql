type Opportunity {
    id: ID!
    name: String!
    winPercentage: String
    account: String!
    primaryContact: String
    closeDate: String
    estimatedRevenue: String
    riskLevel: Risk
    contactList: [Contact]
}

enum Risk {
  HIGH
  MEDIUM
  LOW
}

input CreateOpportunity { 
    name: String!
    winPercentage: String
    account: String!
    primaryContact: String
    closeDate: String
    estimatedRevenue: String
    riskLevel: Risk
}

input UpdateOpportunity {
    account: String!
    name: String
    winPercentage: String
    primaryContact: String
    closeDate: String
    estimatedRevenue: String
    riskLevel: Risk
}


type Query {
    getOpportunityByName(name: String!): Opportunity
    getOpportunityByAccount(account: String!): Opportunity
}

type Mutation {
    createOpportunity(createOpportunityInput: CreateOpportunity!): Opportunity!
    updateOpportunity(updateOpportunityInput: UpdateOpportunity!): Opportunity!
}